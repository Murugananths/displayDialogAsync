{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.ts"],"names":[],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/functions/functions.ts\");\n","/**\n * Adds two numbers without using batching\n * @CustomFunction\n * @param first First number\n * @param second Second number\n * @returns The sum of the two numbers.\n */\nfunction addNoBatch(first: number, second: number): number {\n  return first + second;\n}\n\n/**\n * Divides two numbers using batching\n * @CustomFunction\n * @param dividend The number being divided\n * @param divisor The number to divide the dividend with\n * @returns The sum of the two numbers\n */\nfunction div2(dividend: number, divisor: number) {\n  return _pushOperation(\n    \"div2\",\n    [dividend, divisor]\n  );\n}\n\n/**\n * Multiplies two numbers together using batching\n * @CustomFunction\n * @param first First number to multiply\n * @param second Second number to multiply\n * @returns The product of the two numbers\n */\nfunction mul2(first: number, second: number) {\n  return _pushOperation(\n    \"mul2\",\n    [first, second]\n  );\n}\n\n/**\n * Defines the implementation of the custom functions\n * for the function id defined in the metadata file (functions.json).\n */\nCustomFunctions.associate(\"ADDNOBATCH\", addNoBatch);\nCustomFunctions.associate(\"DIV2\", div2);\nCustomFunctions.associate(\"MUL2\", mul2);\n\n///////////////////////////////////////\n\n// Next batch\ninterface IBatchEntry {\n  operation: string;\n  args: any[];\n  resolve: (data: any) => void;\n  reject: (error: Error) => void;\n}\n\ninterface IServerResponse {\n  result?: any;\n  error?: string;\n}\n\nconst _batch: IBatchEntry[] = [];\nlet _isBatchedRequestScheduled = false;\n\n// This function encloses your custom functions as individual entries,\n// which have some additional properties so you can keep track of whether or not\n// a request has been resolved or rejected.\nfunction _pushOperation(op: string, args: any[]) {\n  // Create an entry for your custom function.\n  const invocationEntry: IBatchEntry = {\n    operation: op, // e.g. sum\n    args: args,\n    resolve: undefined,\n    reject: undefined,\n  };\n\n  // Create a unique promise for this invocation,\n  // and save its resolve and reject functions into the invocation entry.\n  const promise = new Promise((resolve, reject) => {\n    invocationEntry.resolve = resolve;\n    invocationEntry.reject = reject;\n  });\n\n  // Push the invocation entry into the next batch.\n  _batch.push(invocationEntry);\n\n  // If a remote request hasn't been scheduled yet,\n  // schedule it after a certain timeout, e.g. 100 ms.\n  if (!_isBatchedRequestScheduled) {\n    _isBatchedRequestScheduled = true;\n    setTimeout(_makeRemoteRequest, 100);\n  }\n\n  // Return the promise for this invocation.\n  return promise;\n}\n\n// This is a private helper function, used only within your custom function add-in.\n// You wouldn't call _makeRemoteRequest in Excel, for example.\n// This function makes a request for remote processing of the whole batch,\n// and matches the response batch to the request batch.\nfunction _makeRemoteRequest() {\n  // Copy the shared batch and allow the building of a new batch while you are waiting for a response.\n  // Note the use of \"splice\" rather than \"slice\", which will modify the original _batch array\n  // to empty it out.\n  const batchCopy = _batch.splice(0, _batch.length);\n  _isBatchedRequestScheduled = false;\n\n  // Build a simpler request batch that only contains the arguments for each invocation.\n  const requestBatch = batchCopy.map((item) => {\n    return { operation: item.operation, args: item.args };\n  });\n\n  // Make the remote request.\n  _fetchFromRemoteService(requestBatch)\n    .then((responseBatch) => {\n      // Match each value from the response batch to its corresponding invocation entry from the request batch,\n      // and resolve the invocation promise with its corresponding response value.\n      responseBatch.forEach((response, index) => {\n        if (response.error) {\n          batchCopy[index].reject(new Error(response.error));\n        } else {\n          console.log(response);\n          batchCopy[index].resolve(response.result);\n        }\n      });\n    });\n}\n\n// --------------------- A public API ------------------------------\n\n// This function simulates the work of a remote service. Because each service\n// differs, you will need to modify this function appropriately to work with the service you are using. \n// This function takes a batch of argument sets and returns a [promise of] batch of values.\n// NOTE: When implementing this function on a server, also apply an appropriate authentication mechanism\n//       to ensure only the correct callers can access it.\nasync function _fetchFromRemoteService(\n  requestBatch: Array<{ operation: string, args: any[] }>\n): Promise<IServerResponse[]> {\n  // Simulate a slow network request to the server;\n  await pause(1000);\n\n  return requestBatch.map((request): IServerResponse => {\n    const { operation, args } = request;\n\n    try {\n      if (operation === \"div2\") {\n        // Divide the first argument by the second argument.\n        return {\n          result: args[0] / args[1]\n        };\n      } else if (operation === \"mul2\") {\n        // Multiply the arguments for the given entry.\n        const myresult = args[0] * args[1];\n        console.log(myresult);\n        return {\n          result: myresult\n        };\n      } else {\n        return {\n          error: `Operation not supported: ${operation}`\n        };\n      }\n    } catch (error) {\n      return {\n        error: `Operation failed: ${operation}`\n      };\n    }\n  });\n}\n\nfunction pause(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"sourceRoot":""}